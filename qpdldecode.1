'\" t
'\"
'\"	DO NOT EDIT! This file is generated from qpdldecode.1in
'\"
.TH qpdldecode 1 "Sun Apr 25 16:22:30 2021" "qpdldecode 0.0"
'\"
'\"==========================================================================
'\"	STRINGS and MACROS
'\"==========================================================================
'\"
'\"	Define strings for special characters that nroff doesn't have
'\"
'\"	N.B. using .if cua to test for special characters did not work.
'\"
.if !'\*[.T]'ps' .ds ua up
.if  '\*[.T]'ps' .ds ua \(ua
.if !'\*[.T]'ps' .ds da down
.if  '\*[.T]'ps' .ds da \(da
.if !'\*[.T]'ps' .ds <- left
.if  '\*[.T]'ps' .ds <- \(<-
.if !'\*[.T]'ps' .ds -> right
.if  '\*[.T]'ps' .ds -> \(->
'\"
'\"     bx - box a Courier string for making keycaps
'\"
'\"	N.B. this mess is to make the line drawing come out only
'\"	if we are really generating postscript
'\"
.de bx
.ie !'\*[.T]'ps' \{\
.	RB [ \\$1 ]\\$2
.\}
.el \{\
.	ie !r ps4html \{\
'\" \(br\|\s-1\f(CB\\$1\fP\s+1\|\(br\l'|0\(rn'\l'|0\(ul'
.		ft CW
.		nr par*bxw \w'\\$1'+.4m 
\Z'\v'.25m'\D'l 0 -1m'\D'l \\n[par*bxw]u 0'\D'l 0 1m'\D'l -\\n[par*bxw]u 0''\
\Z'\h'.2m'\s-1\\$1\s+1'\
\h'\\n[par*bxw]u'\\$2
.		ft P
.	\}
.	el \{\
.		RB [ \\$1 ]\\$2
.	\}
.\}
..
'\"
'\" strings to set current color (null with old groff)
'\"
.if mred .ds red \m[red]
.if mgreen .ds green \m[green]
.if mblue .ds blue \m[blue]
.if mblack .ds black \m[black]
.if mblack .ds mP \mP
'\"
'\" fix for grotty + xterm. We call for orange, grotty outputs yellow,
'\" but xterm displays yellow as orange.  The cycle is complete.
'\"
.if n .defcolor orange rgb #ffff00
'\"
'\" color <color> - set the current color (ignores request with old groff)
'\"
.de color
.if mred \m[\\$1]\c
..
'\"
'\" colorword <color> <word> - colorize a word (ignored by old groff)
'\"
.de colorword
.ie m\\$1 \m[\\$1]\\$2\mP\c
.el \\$2\c
..
'\"
'\" colbox <fg> <bg> <word> - colorize a word in a filled box
'\"
.de colbox
.ie mred \M[\\$2]\
\v'+.167v'\
\D'P 0 -0.9v  \w'\\$3'u 0  0 +0.9v   -\w'\\$3'u 0'\
\v'-.167v'\
\m[\\$1]\\$3\mP\MP
.el \\$3\c
..
'\"
'\"	Macros for doing pdfmarks
'\"
.de specialps
.if  '\*[.T]'ps' \\k_\X'ps: \\$*'\h'|\\n_u'\c
..
'\"
'\" pdfmark PDFMARKCODE
'\"
.ds pdfmarks
.if d pdfmarks \{\
.de pdfmark
.	specialps exec [\\$1 pdfmark
..
'\"
'\" pdfdest LINKNAME
'\"
.de pdfdest
.pdfmark "/Dest /\\$1 /View [/XYZ -5 PL null] /DEST"
..
'\"
'\" pdfbookmark COUNT LINKNAME STRING
'\"
.de pdfbookmark
.   pdfmark "/View [/XYZ 44 730 1.0] /Count \\$1 /Dest /\\$2 /Title (\\$3) /OUT"
..
'\"
'\"	Define the SH and SS macros to save pdfmark information
'\"	in "arrays" of numbers and strings.
'\"
.if !r rr_n \{\
.nr rr_n 0 1
.am SH
.	nr rr_levels!\\n+[rr_n] 2
.	ds rr_labels!\\n[rr_n] \\$*
.	pdfdest Link\\n[rr_n]
..
.am SS
.	nr rr_levels!\\n+[rr_n] 3
.	ds rr_labels!\\n[rr_n] \\$*
.	pdfdest Link\\n[rr_n]
..
.\}
'\"
'\"	Called at the end of the document to generate the pdfmark outline
'\"
.de pdf_outline
.nr rr_levels!\\n+[rr_n] 1
.nr rr_i 0 1
.while \\n+[rr_i]<\\n[rr_n] \{\
.   nr rr_ip1 \\n[rr_i]+1
.   nr rr_count 0
.   if \\n[rr_levels!\\n[rr_ip1]]>\\n[rr_levels!\\n[rr_i]] \{\
.       nr rr_j \\n[rr_i] 1
.       while \\n+[rr_j]<\\n[rr_n] \{\
.           if \\n[rr_levels!\\n[rr_j]]<=\\n[rr_levels!\\n[rr_i]] \{\
.               break
.           \}
.           if \\n[rr_levels!\\n[rr_j]]==(\\n[rr_levels!\\n[rr_i]]+1) \{\
.               nr rr_count \\n[rr_count]+1
.           \}
.       \}
.   \}
.   ds hhh \\*[rr_labels!\\n[rr_i]]
.   pdfbookmark -\\n[rr_count] Link\\n[rr_i] "\\*[hhh]"
.\}
..
'\"
'\" Some postscript to make pdfmarks harmless on old interpreters...
'\"
.specialps "def /pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse"
'\"
'\" Force display of Bookmarks in Acrobat when document is viewed.
'\"
.pdfmark "[/PageMode /UseOutlines /Page 1 /View [/XYZ null null null] /DOCVIEW"
'\"
'\" Output the document info in pdfmarks
'\"
.pdfmark "\
	/Title (\*[an-title](\*[an-section])) \
	/Subject (\*[an-title] Manual Page) \
	/Author (Rick Richardson) \
	/Keywords (printing) \
	/Creator (groff \n(.x.\n(.y.\n(.Y -man) \
	/CreationDate (\*[an-extra1]) \
	/ModDate (\*[an-extra1]) \
	/DOCINFO"
\}
'\"
'\" The manual page name is only 1st level mark
'\"
.nr rr_levels!\n+[rr_n] 1
.ds rr_labels!\n[rr_n] \*[an-title](\*[an-section])
.pdfdest Link\n[rr_n]
'\"
'\"==========================================================================
'\"	MANUAL PAGE SOURCE
'\"==========================================================================
.SH NAME
qpdldecode \- Decode a QPDL stream into human readable form.
.SH SYNOPSIS
.B qpdldecode
.RI [ options "] <" qpdl-file
.SH DESCRIPTION
.B qpdldecode
decodes a QPDL stream into human readable form.
Only the JBIG compression format (0x13) is handled.
.P
An QPDL stream is the printer language used by the
Samsung CLP-300, CLP-600, CLX-3160 and the
Xerox Phaser 6110
printers.

.SH COMMAND LINE OPTIONS
These are the options that can appear on the command line.
.TP
.BI \-d\0 basename
Basename of .pbm file for saving decompressed planes.
.TP
.BI \-h
Print hex file offsets.
.TP
.BI \-o
Print file offsets.
.TP
.BI \-D\0 level
Set Debug level [0].

.SH EXAMPLES
Decode an QPDL stream file created by foo2qpdl.

.nf
.ft CW
     0:    \\033%-12345X@PJL DEFAULT SERVICEDATE=20070212
    2c:    @PJL SET USERNAME="Unknown"
    49:    @PJL SET JOBNAME="testpage.pdf"
    6a:    @PJL SET COLORMODE=COLOR
    84:    @PJL SET PAPERTYPE = NORMAL
    a1:    @PJL ENTER LANGUAGE = QPDL
    bd:    RECTYPE 0x0  len=17
                res=600, copies=1, papersize=letter(0), w=2550, h=3300
                papersource=auto, unk=0, duplex=0:0, unk=0,2,  unk=268(0x10c)
    ce:    RECTYPE 0xc  len=68(0x44)
                stripe=0, WB=1248(0x4e0), H=128(0x80), plane=4, comp=0x13,
                len=56(0x38)
                magic=0x39abcdef, len=20(0x14), unk=0,0,0,0,0,0,
                checksum=0x356
                DL = 0, D = 0, P = 1, - = 0, XY = 9984 x 6400
                L0 = 6400, MX = 0, MY = 0
                Order   = 0
                Options = 72  LRLTWO TPBON
                1 stripes, 0 layers, 1 planes
   112:    RECTYPE 0xc  len=68(0x44)
                stripe=0, WB=1248(0x4e0), H=128(0x80), plane=1, comp=0x13,
                len=56(0x38)
                magic=0x39abcdef, len=20(0x14), unk=0,0,0,0,0,0,
                checksum=0x356
                DL = 0, D = 0, P = 1, - = 0, XY = 9984 x 6400
                L0 = 6400, MX = 0, MY = 0
                Order   = 0
                Options = 72  LRLTWO TPBON
                1 stripes, 0 layers, 1 planes
   156:    RECTYPE 0xc  len=68(0x44)
                stripe=0, WB=1248(0x4e0), H=128(0x80), plane=2, comp=0x13,
                len=56(0x38)
                magic=0x39abcdef, len=20(0x14), unk=0,0,0,0,0,0,
                checksum=0x356
                DL = 0, D = 0, P = 1, - = 0, XY = 9984 x 6400
                L0 = 6400, MX = 0, MY = 0
                Order   = 0
                Options = 72  LRLTWO TPBON
                1 stripes, 0 layers, 1 planes
   19a:    RECTYPE 0xc  len=68(0x44)
                stripe=0, WB=1248(0x4e0), H=128(0x80), plane=3, comp=0x13,
                len=56(0x38)
                magic=0x39abcdef, len=20(0x14), unk=0,0,0,0,0,0,
                checksum=0x356
                DL = 0, D = 0, P = 1, - = 0, XY = 9984 x 6400
                L0 = 6400, MX = 0, MY = 0
                Order   = 0
                Options = 72  LRLTWO TPBON
                1 stripes, 0 layers, 1 planes
   1de:    RECTYPE 0xc  len=77488(0x12eb0)
                stripe=1, WB=1248(0x4e0), H=128(0x80), plane=1, comp=0x13,
                len=77476(0x12ea4)
                magic=0x39abcdef, len=77440(0x12e80), unk=2000000,0,0,0,0,0,
                checksum=0x9326d7
 1308e:    RECTYPE 0xc  len=77680(0x12f70)
                stripe=1, WB=1248(0x4e0), H=128(0x80), plane=2, comp=0x13,
                len=77668(0x12f64)
                magic=0x39abcdef, len=77632(0x12f40), unk=2000000,0,0,0,0,0,
                checksum=0x9367e5
 25ffe:    RECTYPE 0xc  len=69232(0x10e70)
                stripe=1, WB=1248(0x4e0), H=128(0x80), plane=3, comp=0x13,
                len=69220(0x10e64)
                magic=0x39abcdef, len=69184(0x10e40), unk=2000000,0,0,0,0,0,
                checksum=0x83938a
 36e6e:    RECTYPE 0xc  len=45616(0xb230)
                stripe=1, WB=1248(0x4e0), H=128(0x80), plane=4, comp=0x13,
                len=45604(0xb224)
                magic=0x39abcdef, len=45568(0xb200), unk=2000000,0,0,0,0,0,
                checksum=0x58015d
 4209e:    RECTYPE 0x1  len=3
                copies=1
 420a1:    RECTYPE 0x9  len=0
 420a2:    \\033%-12345X

.ft P
.fi

.SH FILES
.BR /usr/bin/qpdldecode
.SH SEE ALSO
.BR foo2qpdl-wrapper (1),
.BR foo2qpdl (1)
.SH "AUTHOR"
Rick Richardson <rick.richardson@comcast.net>
.br
http://foo2qpdl.rkkda.com/
'\"
'\"
'\"
.em pdf_outline
